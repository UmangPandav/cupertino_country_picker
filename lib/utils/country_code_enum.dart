enum CountryCodeEnum {
  ad('AD'),
  ae('AE'),
  af('AF'),
  ag('AG'),
  ai('AI'),
  al('AL'),
  am('AM'),
  ao('AO'),
  aq('AQ'),
  ar('AR'),
  as('AS'),
  at('AT'),
  au('AU'),
  aw('AW'),
  ax('AX'),
  az('AZ'),
  ba('BA'),
  bb('BB'),
  bd('BD'),
  be('BE'),
  bf('BF'),
  bg('BG'),
  bh('BH'),
  bi('BI'),
  bj('BJ'),
  bl('BL'),
  bm('BM'),
  bn('BN'),
  bo('BO'),
  bq('BQ'),
  br('BR'),
  bs('BS'),
  bt('BT'),
  bv('BV'),
  bw('BW'),
  by('BY'),
  bz('BZ'),
  ca('CA'),
  cc('CC'),
  cd('CD'),
  cf('CF'),
  cg('CG'),
  ch('CH'),
  ci('CI'),
  ck('CK'),
  cl('CL'),
  cm('CM'),
  cn('CN'),
  co('CO'),
  cr('CR'),
  cu('CU'),
  cv('CV'),
  cw('CW'),
  cx('CX'),
  cy('CY'),
  cz('CZ'),
  de('DE'),
  dj('DJ'),
  dk('DK'),
  dm('DM'),
  do_('DO'),
  dz('DZ'),
  ec('EC'),
  ee('EE'),
  eg('EG'),
  eh('EH'),
  er('ER'),
  es('ES'),
  et('ET'),
  fi('FI'),
  fj('FJ'),
  fm('FM'),
  fo('FO'),
  fr('FR'),
  ga('GA'),
  gb('GB'),
  gd('GD'),
  ge('GE'),
  gf('GF'),
  gg('GG'),
  gh('GH'),
  gi('GI'),
  gl('GL'),
  gm('GM'),
  gn('GN'),
  gp('GP'),
  gq('GQ'),
  gr('GR'),
  gt('GT'),
  gu('GU'),
  gw('GW'),
  gy('GY'),
  hk('HK'),
  hm('HM'),
  hn('HN'),
  hr('HR'),
  ht('HT'),
  hu('HU'),
  id('ID'),
  ie('IE'),
  il('IL'),
  im('IM'),
  in_('IN'),
  io('IO'),
  iq('IQ'),
  ir('IR'),
  is_('IS'),
  it('IT'),
  je('JE'),
  jm('JM'),
  jo('JO'),
  jp('JP'),
  ke('KE'),
  kg('KG'),
  kh('KH'),
  ki('KI'),
  km('KM'),
  kn('KN'),
  kp('KP'),
  kr('KR'),
  kw('KW'),
  ky('KY'),
  kz('KZ'),
  la('LA'),
  lb('LB'),
  lc('LC'),
  li('LI'),
  lk('LK'),
  lr('LR'),
  ls('LS'),
  lt('LT'),
  lu('LU'),
  lv('LV'),
  ly('LY'),
  ma('MA'),
  mc('MC'),
  md('MD'),
  me('ME'),
  mf('MF'),
  mg('MG'),
  mh('MH'),
  mk('MK'),
  ml('ML'),
  mm('MM'),
  mn('MN'),
  mo('MO'),
  mp('MP'),
  mq('MQ'),
  mr('MR'),
  ms('MS'),
  mt('MT'),
  mu('MU'),
  mv('MV'),
  mw('MW'),
  mx('MX'),
  my('MY'),
  mz('MZ'),
  na('NA'),
  nc('NC'),
  ne('NE'),
  nf('NF'),
  ng('NG'),
  ni('NI'),
  nl('NL'),
  no('NO'),
  np('NP'),
  nr('NR'),
  nu('NU'),
  nz('NZ'),
  om('OM'),
  pa('PA'),
  pe('PE'),
  pf('PF'),
  pg('PG'),
  ph('PH'),
  pk('PK'),
  pl('PL'),
  pm('PM'),
  pn('PN'),
  pr('PR'),
  ps('PS'),
  pt('PT'),
  pw('PW'),
  py('PY'),
  qa('QA'),
  re('RE'),
  ro('RO'),
  rs('RS'),
  ru('RU'),
  rw('RW'),
  sa('SA'),
  sb('SB'),
  sc('SC'),
  sd('SD'),
  se('SE'),
  sg('SG'),
  sh('SH'),
  si('SI'),
  sj('SJ'),
  sk('SK'),
  sl('SL'),
  sm('SM'),
  sn('SN'),
  so('SO'),
  sr('SR'),
  ss('SS'),
  st('ST'),
  sv('SV'),
  sx('SX'),
  sy('SY'),
  sz('SZ'),
  tc('TC'),
  td('TD'),
  tf('TF'),
  tg('TG'),
  th('TH'),
  tj('TJ'),
  tk('TK'),
  tl('TL'),
  tm('TM'),
  tn('TN'),
  to('TO'),
  tr('TR'),
  tt('TT'),
  tv('TV'),
  tw('TW'),
  tz('TZ'),
  ua('UA'),
  ug('UG'),
  um('UM'),
  us('US'),
  uy('UY'),
  uz('UZ'),
  va('VA'),
  vc('VC'),
  ve('VE'),
  vg('VG'),
  vi('VI'),
  vn('VN'),
  vu('VU'),
  wf('WF'),
  ws('WS'),
  ye('YE'),
  yt('YT'),
  za('ZA'),
  zm('ZM'),
  zw('ZW');

  final String code;
  const CountryCodeEnum(this.code);
}

extension CountryCodeEnumExtension on CountryCodeEnum {
  static CountryCodeEnum fromCode(String input) {
    return CountryCodeEnum.values.firstWhere(
      (e) => e.code.toUpperCase() == input.toUpperCase(),
      orElse: () => throw ArgumentError('Invalid country code: $input'),
    );
  }

  static CountryCodeEnum? tryFromCode(String input) {
    try {
      return fromCode(input);
    } catch (_) {
      return null;
    }
  }
}
